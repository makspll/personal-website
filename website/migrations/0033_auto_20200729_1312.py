# Generated by Django 3.0.8 on 2020-07-29 12:12

from django.db import migrations, models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0032_auto_20200728_1035'),
    ]

    operations = [
        migrations.AddField(
            model_name='articlepage',
            name='show_in_listings',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='freeformpage',
            name='freeform_items',
            field=wagtail.core.fields.StreamField([('pdf', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Document', max_length=255)), ('description', wagtail.core.blocks.CharBlock(default='Example description', max_length=255)), ('document', wagtail.documents.blocks.DocumentChooserBlock())])), ('timeline', wagtail.core.blocks.StructBlock([('timeline_items', wagtail.core.blocks.StreamBlock([('event', wagtail.core.blocks.StructBlock([('date', wagtail.core.blocks.DateBlock(required=False)), ('header', wagtail.core.blocks.CharBlock(max_length=255, required=False)), ('lead_paragraph', wagtail.core.blocks.RichTextBlock(required=False))]))]))])), ('code', wagtail.core.blocks.StructBlock([('language', wagtail.core.blocks.ChoiceBlock(choices=[('abap', 'ABAP'), ('abnf', 'Augmented Backus–Naur form'), ('actionscript', 'ActionScript'), ('ada', 'Ada'), ('antlr4', 'ANTLR4'), ('apacheconf', 'Apache Configuration'), ('apl', 'APL'), ('applescript', 'AppleScript'), ('aql', 'AQL'), ('arduino', 'Arduino'), ('arff', 'ARFF'), ('asciidoc', 'AsciiDoc'), ('asm6502', '6502 Assembly'), ('aspnet', 'ASP.NET (C#)'), ('autohotkey', 'AutoHotkey'), ('autoit', 'AutoIt'), ('bash', 'Bash + Shell'), ('basic', 'BASIC'), ('batch', 'Batch'), ('bison', 'Bison'), ('bnf', 'Backus–Naur form + Routing Backus–Naur form'), ('brainfuck', 'Brainfuck'), ('bro', 'Bro'), ('c', 'C'), ('clike', 'C-like'), ('cmake', 'CMake'), ('csharp', 'C#'), ('cpp', 'C++'), ('cil', 'CIL'), ('coffeescript', 'CoffeeScript'), ('clojure', 'Clojure'), ('crystal', 'Crystal'), ('csp', 'Content-Security-Policy'), ('css', 'CSS'), ('css-extras', 'CSS Extras'), ('d', 'D'), ('dart', 'Dart'), ('diff', 'Diff'), ('django', 'Django/Jinja2'), ('dns-zone-file', 'DNS Zone File'), ('docker', 'Docker'), ('ebnf', 'Extended Backus–Naur form'), ('eiffel', 'Eiffel'), ('ejs', 'EJS'), ('elixir', 'Elixir'), ('elm', 'Elm'), ('erb', 'ERB'), ('erlang', 'Erlang'), ('etlua', 'Embedded LUA Templating'), ('fsharp', 'F#'), ('flow', 'Flow'), ('fortran', 'Fortran'), ('ftl', 'Freemarker Template Language'), ('gcode', 'G-code'), ('gdscript', 'GDScript'), ('gedcom', 'GEDCOM'), ('gherkin', 'Gherkin'), ('git', 'Git'), ('glsl', 'GLSL'), ('gml', 'GameMaker Language'), ('go', 'Go'), ('graphql', 'GraphQL'), ('groovy', 'Groovy'), ('haml', 'Haml'), ('handlebars', 'Handlebars'), ('haskell', 'Haskell'), ('haxe', 'Haxe'), ('hcl', 'HCL'), ('http', 'HTTP'), ('hpkp', 'HTTP Public-Key-Pins'), ('hsts', 'HTTP Strict-Transport-Security'), ('ichigojam', 'IchigoJam'), ('icon', 'Icon'), ('inform7', 'Inform 7'), ('ini', 'Ini'), ('io', 'Io'), ('j', 'J'), ('java', 'Java'), ('javadoc', 'JavaDoc'), ('javadoclike', 'JavaDoc-like'), ('javascript', 'JavaScript'), ('javastacktrace', 'Java stack trace'), ('jolie', 'Jolie'), ('jq', 'JQ'), ('jsdoc', 'JSDoc'), ('js-extras', 'JS Extras'), ('js-templates', 'JS Templates'), ('json', 'JSON'), ('jsonp', 'JSONP'), ('json5', 'JSON5'), ('julia', 'Julia'), ('keyman', 'Keyman'), ('kotlin', 'Kotlin'), ('latex', 'LaTeX'), ('less', 'Less'), ('lilypond', 'Lilypond'), ('liquid', 'Liquid'), ('lisp', 'Lisp'), ('livescript', 'LiveScript'), ('lolcode', 'LOLCODE'), ('lua', 'Lua'), ('makefile', 'Makefile'), ('markdown', 'Markdown'), ('markup', 'Markup + HTML + XML + SVG + MathML'), ('markup-templating', 'Markup templating'), ('matlab', 'MATLAB'), ('mel', 'MEL'), ('mizar', 'Mizar'), ('monkey', 'Monkey'), ('n1ql', 'N1QL'), ('n4js', 'N4JS'), ('nand2tetris-hdl', 'Nand To Tetris HDL'), ('nasm', 'NASM'), ('nginx', 'nginx'), ('nim', 'Nim'), ('nix', 'Nix'), ('nsis', 'NSIS'), ('objectivec', 'Objective-C'), ('ocaml', 'OCaml'), ('opencl', 'OpenCL'), ('oz', 'Oz'), ('parigp', 'PARI/GP'), ('parser', 'Parser'), ('pascal', 'Pascal + Object Pascal'), ('pascaligo', 'Pascaligo'), ('pcaxis', 'PC Axis'), ('perl', 'Perl'), ('php', 'PHP'), ('phpdoc', 'PHPDoc'), ('php-extras', 'PHP Extras'), ('plsql', 'PL/SQL'), ('powershell', 'PowerShell'), ('processing', 'Processing'), ('prolog', 'Prolog'), ('properties', '.properties'), ('protobuf', 'Protocol Buffers'), ('pug', 'Pug'), ('puppet', 'Puppet'), ('pure', 'Pure'), ('python', 'Python'), ('q', 'Q (kdb+ database)'), ('qore', 'Qore'), ('r', 'R'), ('jsx', 'React JSX'), ('tsx', 'React TSX'), ('renpy', "Ren'py"), ('reason', 'Reason'), ('regex', 'Regex'), ('rest', 'reST (reStructuredText)'), ('rip', 'Rip'), ('roboconf', 'Roboconf'), ('robot-framework', 'Robot Framework'), ('ruby', 'Ruby'), ('rust', 'Rust'), ('sas', 'SAS'), ('sass', 'Sass (Sass)'), ('scss', 'Sass (Scss)'), ('scala', 'Scala'), ('scheme', 'Scheme'), ('shell-session', 'Shell Session'), ('smalltalk', 'Smalltalk'), ('smarty', 'Smarty'), ('solidity', 'Solidity (Ethereum)'), ('sparql', 'SPARQL'), ('splunk-spl', 'Splunk SPL'), ('sqf', 'SQF: Status Quo Function (Arma 3)'), ('sql', 'SQL'), ('soy', 'Soy (Closure Template)'), ('stylus', 'Stylus'), ('swift', 'Swift'), ('tap', 'TAP'), ('tcl', 'Tcl'), ('textile', 'Textile'), ('toml', 'TOML'), ('tt2', 'Template Toolkit 2'), ('twig', 'Twig'), ('typescript', 'TypeScript'), ('t4-cs', 'T4 Text Templates (C#)'), ('t4-vb', 'T4 Text Templates (VB)'), ('t4-templating', 'T4 templating'), ('vala', 'Vala'), ('vbnet', 'VB.Net'), ('velocity', 'Velocity'), ('verilog', 'Verilog'), ('vhdl', 'VHDL'), ('vim', 'vim'), ('visual-basic', 'Visual Basic'), ('wasm', 'WebAssembly'), ('wiki', 'Wiki markup'), ('xeora', 'Xeora + XeoraCube'), ('xojo', 'Xojo (REALbasic)'), ('xquery', 'XQuery'), ('yaml', 'YAML'), ('zig', 'Zig')], help_text='Coding language', identifier='language', label='Language')), ('code', wagtail.core.blocks.TextBlock(identifier='code', label='Code'))])), ('projects', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(default='Recent Projects')), ('project_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('project_page', wagtail.core.blocks.PageChooserBlock(page_type=['website.ProjectArticlePage']))])))])), ('text', wagtail.core.blocks.RichTextBlock())], blank=True, null=True),
        ),
    ]
